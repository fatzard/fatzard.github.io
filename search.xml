<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一个基于Spring的程序</title>
      <link href="/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/"/>
      <url>/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/</url>
      
        <content type="html"><![CDATA[<h2 id="1、什么是Spring？"><a href="#1、什么是Spring？" class="headerlink" title="1、什么是Spring？"></a>1、什么是Spring？</h2><p>Spring是轻量级开源的javaEE框架,其核心是AOP和IOC</p><h4 id="1-1、Spring的特点："><a href="#1-1、Spring的特点：" class="headerlink" title="1.1、Spring的特点："></a>1.1、Spring的特点：</h4><p>1.方便解耦，简化开发</p><p>2.AOP编程支持</p><p>3.方便程序测试</p><p>4.方便和其他框架进行整合    </p><p>5.方便事务操作</p><p>6.降低API开发难度</p><h4 id="1-2、Spring下载："><a href="#1-2、Spring下载：" class="headerlink" title="1.2、Spring下载："></a>1.2、Spring下载：</h4><p>进入网址：[<a href="http://repo.spring.io]">http://repo.spring.io]</a></p><p>详细的Spring下载可参考这篇博客<a href="https://blog.csdn.net/frankarmstrong/article/details/69808813">https://blog.csdn.net/frankarmstrong/article/details/69808813</a></p><h2 id="2、Spring-项目中pom-xml文件配置"><a href="#2、Spring-项目中pom-xml文件配置" class="headerlink" title="2、Spring 项目中pom.xml文件配置"></a>2、Spring 项目中pom.xml文件配置</h2><h4 id="2-1、导入依赖包："><a href="#2-1、导入依赖包：" class="headerlink" title="2.1、导入依赖包："></a>2.1、导入依赖包：</h4><p>Spring常用的的依赖包可以通过导入spring-webmvc包自动导入</p><p><img src="/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/1.png"></p><p>在xml文件中添加如下配置</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-webmvc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><p>导入依赖包，通过maven即可自动加载。</p><p>除此之外，还可以导入其他常用包</p><p><img src="/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/2.png"></p><p>这些包在后面的开发中会用到，其相关配置文件如下：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>5.3.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.13.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>aspectjweaver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.9.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></code></pre><h3 id="3、利用Spring运行一个简单的程序"><a href="#3、利用Spring运行一个简单的程序" class="headerlink" title="3、利用Spring运行一个简单的程序"></a>3、利用Spring运行一个简单的程序</h3><p>打开IDEA编译器，构建如下的目录</p><p><img src="/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/3.png" alt="image-20220404185532186"></p><p>首先写一个实体<code>hello</code>类：</p><pre class="language-java" data-language="java"><code class="language-java">public class Hello &#123;    private  String str;    public String getStr() &#123;        return str;    &#125;    public void setStr(String str) &#123;        this.str &#x3D; str;    &#125;    @Override    public String toString() &#123;        return &quot;Hello&#123;&quot; +                &quot;str&#x3D;&#39;&quot; + str + &#39;\&#39;&#39; +                &#39;&#125;&#39;;    &#125;&#125;</code></pre><p>其中<code>./resources/bean.xml</code>为Spring的容器配置文件，那么接下来向Spring容器中注入对象：</p><pre class="language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.demo.pro.Hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>str<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Spring<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">></span></span></code></pre><p>在Spring中每个对象也被叫做bean，每个bean通过Spring容器赋值，比如：<code>&lt;property name=&quot;str&quot; value=&quot;Spring&quot;&gt;&lt;/property&gt;</code></p><p>如果对象注入成功，那么在hello类的左侧出现个Spring的标志</p><p><img src="/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/4.png"></p><p>看来我们注册成功，那么接下来写一次test类进行测试：</p><pre class="language-java" data-language="java"><code class="language-java">public class mytest &#123;    public static  void main(String[] args)&#123;        ApplicationContext context&#x3D;new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);        Hello hello&#x3D;(Hello) context.getBean(&quot;hello&quot;);        System.out.println(hello.toString());    &#125;&#125;</code></pre><p>其中<code>ApplicationContext context=new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</code>是拿去Spring容器中对象的前提操作，因此在取得上下文后，再通过<code>context.getBean</code>方法传入<code>id</code>获得的对象，这样我们就拿到了对象。</p><p>运行一下：</p><p><img src="/2022/04/04/2022-04-04-di-yi-ge-ji-yu-spring-de-cheng-xu/5.png"></p><p>很高兴，运行成功！！！！</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码格式测试</title>
      <link href="/2022/04/04/dai-ma-ce-shi/"/>
      <url>/2022/04/04/dai-ma-ce-shi/</url>
      
        <content type="html"><![CDATA[<p>首先测试java代码：</p><pre class="language-java" data-language="java"><code class="language-java">public class Main&#123;    @Test    public void test()    &#123;        System.out.println(&quot;Java&quot;)    &#125;&#125;</code></pre><p>然后测试C++代码：</p><pre class="language-c++" data-language="c++"><code class="language-c++">#include&lt;iostream&gt;using namespace std;int main()&#123;    cout&lt;&lt;&quot;C++&quot;&lt;&lt;endl;    return 0;&#125;</code></pre><p>最后是python代码：</p><pre class="language-py" data-language="py"><code class="language-py">print(&quot;python&quot;)</code></pre><p>完成</p>]]></content>
      
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello world</title>
      <link href="/2022/04/03/hello-world/"/>
      <url>/2022/04/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello, my friends!</p><p>这是我的博客，我将在这分享我的算法笔记和Spring的学习之路！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
